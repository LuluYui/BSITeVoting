{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/luluyip/BSIT_eVoting/e-voting/src/screens/Login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, setState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { TouchableHighlight, TouchableOpacity } from \"react-native-gesture-handler\";\nimport Button from \"../components/Button\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport ipAddress from \"../ipAddress\";\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n\n    _this.getQRCode = function () {\n      var options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          qr_code: _this.state.qr_code\n        })\n      };\n      fetch(\"http://\" + ipAddress + \"/qr_code\", options).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data.length > 0) {\n          _this.props.navigation.navigate('Dashboard');\n        }\n      }, function (error) {\n        _this.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    };\n\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      items: {},\n      qr_code: ''\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"ComponentDidMount\",\n    value: function ComponentDidMount() {\n      this.getQRCode();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }, React.createElement(ImageBackground, {\n        style: styles.image,\n        source: require(\"../assets/HK_night.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/vote_button_logo.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: styles.titleText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, \"BSIT VOTING SYSTEM\")), React.createElement(View, {\n        style: styles.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, \"USER ID\"), React.createElement(TextInput, {\n        style: styles.textInput,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            qr_code: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }), React.createElement(Button, {\n        onPress: function onPress() {\n          return _this2.getQRCode();\n        },\n        title: \"Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nLogin.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  var params = navigation.state.params || {};\n  return {\n    headerLeft: function headerLeft() {\n      return React.createElement(Icon, {\n        name: \"qrcode-scan\",\n        size: 30,\n        onPress: function onPress() {\n          return navigation.navigate('Dashboard');\n        },\n        style: {\n          color: 'white',\n          marginHorizontal: 13\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      });\n    }\n  };\n};\n\nexport { Login as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 0.8,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  text: {\n    alignSelf: 'flex-start',\n    marginLeft: 20\n  },\n  card: {\n    shadowOpacity: 0.3,\n    shadowRadius: 5,\n    backgroundColor: \"#f4f4f4\",\n    width: \"90%\",\n    height: 200,\n    borderWidth: 2,\n    borderColor: \"#dddddd\",\n    justifyContent: \"center\"\n  },\n  titleText: {\n    color: \"white\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    paddingTop: 10\n  },\n  textInput: {\n    borderColor: \"black\",\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    height: 29,\n    marginTop: 10,\n    alignSelf: 'center',\n    width: \"90%\"\n  },\n  appButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  button: {\n    height: 30,\n    backgroundColor: \"black\",\n    opacity: 100,\n    width: \"95%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 10\n  },\n  image: {\n    width: \"100%\",\n    height: 200,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  title: {\n    fontSize: 20,\n    textAlign: \"center\",\n    marginTop: 40\n  }\n});","map":{"version":3,"sources":["/Users/luluyip/BSIT_eVoting/e-voting/src/screens/Login.js"],"names":["React","Component","setState","TouchableHighlight","TouchableOpacity","Button","Icon","ipAddress","Login","props","getQRCode","options","method","headers","body","JSON","stringify","qr_code","state","fetch","then","response","json","data","length","navigation","navigate","error","isLoaded","items","styles","container","image","require","titleText","card","text","textInput","navigationOptions","params","headerLeft","color","marginHorizontal","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","alignSelf","marginLeft","shadowOpacity","shadowRadius","width","height","borderWidth","borderColor","fontSize","fontWeight","paddingTop","marginTop","appButtonText","button","opacity","title","textAlign"],"mappings":"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","sourcesContent":["import React, { Component, setState } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  Image,\n  TextInput,\n  Text,\n  ImageBackground,\n} from \"react-native\";\nimport { TouchableHighlight, TouchableOpacity } from \"react-native-gesture-handler\";\nimport Button from '../components/Button';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport ipAddress from \"../ipAddress\";\n\nexport default class Login extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: {},\n      qr_code: '',\n    };\n  }\n\n  ComponentDidMount() {\n    this.getQRCode();\n  }\n\n  getQRCode = () => {\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        qr_code: this.state.qr_code,\n      })\n    };\n\n    fetch(`http://${ipAddress}/qr_code`, options)\n      .then((response) => response.json())\n      .then((data) => {\n         if (data.length > 0){\n          this.props.navigation.navigate('Dashboard');\n         }\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n  };\n\n  static navigationOptions = ({ navigation }) => {\n    const params = navigation.state.params || {};\n\n    return {\n      headerLeft: () => (\n        <Icon name=\"qrcode-scan\" \n        size={30} \n        onPress={() => navigation.navigate('Dashboard')}\n        style={{color:'white', marginHorizontal: 13}}/>\n      ),\n      /* the rest of this config is unchanged */\n    };\n  };\n\n  render() {\n    return (\n\n      \n      <View style={styles.container}>\n        <ImageBackground\n          style={styles.image}\n          source={require(\"../assets/HK_night.png\")}\n        >\n          <Image source={require(\"../assets/vote_button_logo.png\")} />\n          <Text style={styles.titleText}>BSIT VOTING SYSTEM</Text>\n        </ImageBackground>\n\n        <View style={styles.card}>\n          <Text style={styles.text}>USER ID</Text>\n          <TextInput style={styles.textInput} autoCapitalize = 'none' onChangeText={(text) => this.setState({ qr_code: text })}></TextInput>\n\n          <Button onPress={() => this.getQRCode()} title=\"Login\"></Button>\n        </View>\n        \n\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 0.8,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  text: {\n    alignSelf: 'flex-start',\n    marginLeft: 20,\n  },\n  card: {\n    shadowOpacity: 0.3,\n    shadowRadius: 5,\n    backgroundColor: \"#f4f4f4\",\n    width: \"90%\",\n    height: 200,\n    borderWidth: 2,\n    borderColor: \"#dddddd\",\n    justifyContent: \"center\"\n  },\n  titleText: {\n    color: \"white\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    paddingTop: 10,\n  },\n  textInput: {\n    borderColor: \"black\",\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    height: 29,\n    marginTop: 10,\n    alignSelf: 'center',\n    width: \"90%\",\n  },\n  appButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  button: {\n    height: 30,\n    backgroundColor: \"black\",\n    opacity: 100,\n    width: \"95%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 10,\n  },\n  image: {\n    width: \"100%\",\n    height: 200,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  title: {\n    fontSize: 20,\n    textAlign: \"center\",\n    marginTop: 40,\n  }\n});\n"]},"metadata":{},"sourceType":"module"}